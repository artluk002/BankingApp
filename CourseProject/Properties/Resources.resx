<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="applyforaloan" xml:space="preserve">
    <value>Apply for a loan</value>
  </data>
  <data name="authorization" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="cardnumberlable" xml:space="preserve">
    <value>Card number:</value>
  </data>
  <data name="cards" xml:space="preserve">
    <value>Cards:</value>
  </data>
  <data name="cardtypelable" xml:space="preserve">
    <value>Card type:</value>
  </data>
  <data name="changemailaddress" xml:space="preserve">
    <value>Change mail address</value>
  </data>
  <data name="changepassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="changephonenumber" xml:space="preserve">
    <value>Change phone number</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code:</value>
  </data>
  <data name="commission" xml:space="preserve">
    <value>Commission</value>
  </data>
  <data name="communalpayments" xml:space="preserve">
    <value>Communal payments</value>
  </data>
  <data name="communalunderlable" xml:space="preserve">
    <value>Payment of various utility services 
from a card to a personal account. 
Please make sure you enter your 
account number correctly before 
paying. in order to avoid 
erroneous payment, because in 
case of an erroneous payment 
the bank will not be able to help 
you with the cancellation 
of the payment!</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="createbutton" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="credittypecard" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="creditunderlable" xml:space="preserve">
    <value>Loan processing is possible 
only on credit cards! Don't 
delay your monthly payments 
to avoid penalty fees.</value>
  </data>
  <data name="currencylable" xml:space="preserve">
    <value>Currency:</value>
  </data>
  <data name="currentpassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="cvvcode" xml:space="preserve">
    <value>CVV-code:</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="dateoftheloan" xml:space="preserve">
    <value>Date of the loan</value>
  </data>
  <data name="debittypecard" xml:space="preserve">
    <value>Debit</value>
  </data>
  <data name="destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="drlop" xml:space="preserve">
    <value>Don't remember login or password</value>
  </data>
  <data name="english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="expirydate" xml:space="preserve">
    <value>Expiry date</value>
  </data>
  <data name="female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="fixedannualrate" xml:space="preserve">
    <value>Fixed annual rate</value>
  </data>
  <data name="fromcardlable" xml:space="preserve">
    <value>From card</value>
  </data>
  <data name="fullname" xml:space="preserve">
    <value>Full name:</value>
  </data>
  <data name="genderlable" xml:space="preserve">
    <value>Gender:</value>
  </data>
  <data name="information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="internetpayments" xml:space="preserve">
    <value>Internet payments</value>
  </data>
  <data name="internetunderlable" xml:space="preserve">
    <value>Payment for various internet
services from a card to a personal 
account. Please make sure before 
paying entered the correct number
accounts to avoid erroneous
payment, as in the case
the bank did not make an erroneous
payment can help you cancel
payment!</value>
  </data>
  <data name="languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="loginbutton" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginlable" xml:space="preserve">
    <value>Login:</value>
  </data>
  <data name="maillable" xml:space="preserve">
    <value>Mail:</value>
  </data>
  <data name="male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="monthlypayment" xml:space="preserve">
    <value>Monthly payment</value>
  </data>
  <data name="monthsnumber" xml:space="preserve">
    <value>Number of months</value>
  </data>
  <data name="mycredit" xml:space="preserve">
    <value>My credit</value>
  </data>
  <data name="namelable" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="newpassword" xml:space="preserve">
    <value>New password:</value>
  </data>
  <data name="nextpayment" xml:space="preserve">
    <value>Next payment</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="pay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="paymentsystemlable" xml:space="preserve">
    <value>Payment system:</value>
  </data>
  <data name="personalaccount" xml:space="preserve">
    <value>Personal account</value>
  </data>
  <data name="personalaccountnumber" xml:space="preserve">
    <value>Personal account number</value>
  </data>
  <data name="personaldata" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="personaldatachanges" xml:space="preserve">
    <value>Personal data changes</value>
  </data>
  <data name="phonelable" xml:space="preserve">
    <value>Phone:</value>
  </data>
  <data name="phoneunderlable" xml:space="preserve">
    <value>Replenishment of Belarusian numbers only 
(80 or +375)</value>
  </data>
  <data name="pincodelable" xml:space="preserve">
    <value>PIN-code</value>
  </data>
  <data name="recipientscard" xml:space="preserve">
    <value>Recipient's card</value>
  </data>
  <data name="recovery" xml:space="preserve">
    <value>Recovery</value>
  </data>
  <data name="registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="repitlable" xml:space="preserve">
    <value>Repit:</value>
  </data>
  <data name="replenishmentonlytobelarusiannumbers" xml:space="preserve">
    <value>Replenishment only to Belarusian numbers</value>
  </data>
  <data name="russion" xml:space="preserve">
    <value>Russion</value>
  </data>
  <data name="services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="signout" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="sum" xml:space="preserve">
    <value>Sum</value>
  </data>
  <data name="surnamelable" xml:space="preserve">
    <value>Surname:</value>
  </data>
  <data name="tocardunderlable" xml:space="preserve">
    <value>Transfer to VISA or MasterCard 
without commission!</value>
  </data>
  <data name="topayment" xml:space="preserve">
    <value>To payment</value>
  </data>
  <data name="topupmobile" xml:space="preserve">
    <value>Top up mobile</value>
  </data>
  <data name="topupyouraccount" xml:space="preserve">
    <value>Top up your account</value>
  </data>
  <data name="transactiontype" xml:space="preserve">
    <value>Transaction type</value>
  </data>
  <data name="transferamount" xml:space="preserve">
    <value>Transfer amount</value>
  </data>
  <data name="transferbutton" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="transferfromaccounttoaccount" xml:space="preserve">
    <value>Transfer from account to account</value>
  </data>
  <data name="transferfromaccounttocard" xml:space="preserve">
    <value>Transfer from account to card</value>
  </data>
  <data name="transferfromcardtoaccount" xml:space="preserve">
    <value>Transfer from card to account</value>
  </data>
  <data name="transfertothecard" xml:space="preserve">
    <value>Transfer to the card</value>
  </data>
</root>